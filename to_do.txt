// CRUD operations and text fields

---------------

how do i view the bookings. | API endpoints | logout

to prompt:
-  when i click the back button again after getting the message "The booking you were viewing no longer exists.", i must be redirected to home page
- browser history, back button should return to previous screen after user is informed booking no longer exists
[unit tests for the system, not just unit tests testing what is just in tests.py
; test-driven development [TDD] ]
--> make tests compatible with the existing project, not the other way around
--> create system tests for this project in a file named system_tests3.py (using deepseek)

- system testing (done)
- write acceptance tests (do this only after system testing - done)
- write performance tests for this project in a file named performance_tests.py
[other tests: performance (load, stress, scalability, stability), usability, compatibility]
- refactor and optimise code
- suggest improvements that can be made to the project
- now for user clarification, a room should be classed as "unavailable" when navigating to "Rooms" if the room has already been booked, and the "Book Now" button should be shaded out and the user should not be able to click on it
-  now suggest how to improve the project and implement them whilst using a test driven development approach
- now suggest how to improve the project and implement them. you must do this step by step so we can easily isolate and detect errors and revert back to a previous change if needed. prioritise maintaining and improving functionality above all else.

to do:
- add doc strings to all files (Zencoder command)

- CRUD for (bookings) --> be able to edit any fields i want while keeping other fields the same e.g. changing checkin/out date without changing the room / room type

- (not needed) implement role based access control (RestAPI) --> only manager should be able to view and edit bookings made by the guest

- styling: clear display and icons for errors and messages like exceeding no. of guests or wrong check-in/out dates (clear error handling)

- allow users to delete their own bookings
- allow users to edit their own bookings
- allow users to cancel their own bookings
- allow users to search for specific bookings
- allow users to filter bookings based on certain criteria (e.g., date range, status)
- allow users to export bookings data in various formats (CSV, Excel, PDF)
- allow users to print or download a copy of their booking details
- allow users to receive email notifications about upcoming bookings or changes to their booking
- provide clear instructions and guidance on how to use the booking system effectively

- if in the RestAPI endpoint i specify that a room is not available (checkbox) at http://localhost:8000/api/rooms/, then it should not show the room as available at http://127.0.0.1:8000/rooms/
- prevent double bookings (done) -> should display room unavailable when go to "Rooms" on navigation bar --> book now button should be disabled
- the user should not be able to add a room to the database if that room already exists in the database --> should just show error message, not success message
- when admin log out, it should take to admin log out screen so they can log back in and return to admin home screen. for instance, when i click logout from this url "http://localhost:8000/admin/hotel_app/room/ " it  goes to this url "http://localhost:8000/logout/success/ ", instead of this url "http://localhost:8000/admin/login/?next=/admin/hotel_app/room/ "
- API endpoints (how to view through URL)
- format login page (login page when go to url, instead of already being logged in)

- add contents to main.js

what it should do (to catch up):





done:
- error message styling when booking a room just like the style when editing a room
- shouldn't get the same error message twice that check-in data cannot be in the past, it should only appear under check-in date like for when booking a room
- make booking_edit page look more presentable
- add a back button to each screen to improve navigation for the user
- hotel_app/forms.py: Implement custom validation logic in BookingForm to prevent overlapping bookings and enforce business rules.
- HTML page must be rendered for the rooms and detail rooms available
- show a list of bookings made 
- complete booking when click submit button and take the user to a confirmation page
- the database should automatically update showing the completed booking 
- logout redirect
- fix url issues like: http://localhost:8000/rooms/ and http://localhost:8000/rooms/rooms/
- guest capacity limits (informative error message if too many) and message for wrong check in/out dates
- must specify a room id that exists when select "Book A Room" from the navigation bar

